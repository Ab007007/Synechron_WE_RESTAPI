<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="10" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-21T12:30:43 IST" name="Default suite" finished-at="2024-04-21T12:30:47 IST" duration-ms="3884">
    <groups>
    </groups>
    <test started-at="2024-04-21T12:30:43 IST" name="Default test" finished-at="2024-04-21T12:30:47 IST" duration-ms="3884">
      <class name="com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo">
        <test-method is-config="true" signature="getResponse()[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:43 IST" name="getResponse" finished-at="2024-04-21T12:30:45 IST" duration-ms="2302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponse -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:45 IST" name="beforeTest" finished-at="2024-04-21T12:30:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="getID()[pri:1, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:45 IST" name="getID" finished-at="2024-04-21T12:30:46 IST" duration-ms="784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getID -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:46 IST" name="afterTest" finished-at="2024-04-21T12:30:46 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getID status=SUCCESS method=ValidatableResponseDemo.getID()[pri:1, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:46 IST" name="beforeTest" finished-at="2024-04-21T12:30:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="getName()[pri:2, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:46 IST" name="getName" finished-at="2024-04-21T12:30:46 IST" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getName -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:46 IST" name="afterTest" finished-at="2024-04-21T12:30:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getName status=SUCCESS method=ValidatableResponseDemo.getName()[pri:2, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:46 IST" name="beforeTest" finished-at="2024-04-21T12:30:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="getAllUrlsFrombackgroundImageScaled()[pri:3, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:46 IST" name="getAllUrlsFrombackgroundImageScaled" finished-at="2024-04-21T12:30:46 IST" duration-ms="349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllUrlsFrombackgroundImageScaled -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:46 IST" name="afterTest" finished-at="2024-04-21T12:30:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAllUrlsFrombackgroundImageScaled status=SUCCESS method=ValidatableResponseDemo.getAllUrlsFrombackgroundImageScaled()[pri:3, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:46 IST" name="beforeTest" finished-at="2024-04-21T12:30:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="getFirstElementInBGIScaled()[pri:4, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:46 IST" name="getFirstElementInBGIScaled" finished-at="2024-04-21T12:30:47 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFirstElementInBGIScaled -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="afterTest" finished-at="2024-04-21T12:30:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getFirstElementInBGIScaled status=SUCCESS method=ValidatableResponseDemo.getFirstElementInBGIScaled()[pri:4, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="beforeTest" finished-at="2024-04-21T12:30:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="getAllBGIScaled()[pri:5, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="getAllBGIScaled" finished-at="2024-04-21T12:30:47 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllBGIScaled -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="afterTest" finished-at="2024-04-21T12:30:47 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAllBGIScaled status=SUCCESS method=ValidatableResponseDemo.getAllBGIScaled()[pri:5, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="beforeTest" finished-at="2024-04-21T12:30:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="getAllWidthGreaterThan1000()[pri:6, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="getAllWidthGreaterThan1000" finished-at="2024-04-21T12:30:47 IST" duration-ms="93" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllWidthGreaterThan1000 -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="afterTest" finished-at="2024-04-21T12:30:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAllWidthGreaterThan1000 status=SUCCESS method=ValidatableResponseDemo.getAllWidthGreaterThan1000()[pri:6, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="beforeTest" finished-at="2024-04-21T12:30:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="getAllUrlWithWidthGreaterThan1000()[pri:7, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="getAllUrlWithWidthGreaterThan1000" finished-at="2024-04-21T12:30:47 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllUrlWithWidthGreaterThan1000 -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="afterTest" finished-at="2024-04-21T12:30:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAllUrlWithWidthGreaterThan1000 status=SUCCESS method=ValidatableResponseDemo.getAllUrlWithWidthGreaterThan1000()[pri:7, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="beforeTest" finished-at="2024-04-21T12:30:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="getElementWithMaxWidthInBGIScaled()[pri:8, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="getElementWithMaxWidthInBGIScaled" finished-at="2024-04-21T12:30:47 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getElementWithMaxWidthInBGIScaled -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="afterTest" finished-at="2024-04-21T12:30:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getElementWithMaxWidthInBGIScaled status=SUCCESS method=ValidatableResponseDemo.getElementWithMaxWidthInBGIScaled()[pri:8, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="beforeTest" finished-at="2024-04-21T12:30:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="getElementWithMinWidthInBGIScaled()[pri:9, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="getElementWithMinWidthInBGIScaled" finished-at="2024-04-21T12:30:47 IST" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getElementWithMinWidthInBGIScaled -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="afterTest" finished-at="2024-04-21T12:30:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getElementWithMinWidthInBGIScaled status=SUCCESS method=ValidatableResponseDemo.getElementWithMinWidthInBGIScaled()[pri:9, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method signature="getURLWithMinWidthInBGIScaled()[pri:9, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="getURLWithMinWidthInBGIScaled" finished-at="2024-04-21T12:30:47 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getURLWithMinWidthInBGIScaled -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="beforeTest" finished-at="2024-04-21T12:30:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3]" started-at="2024-04-21T12:30:47 IST" name="afterTest" finished-at="2024-04-21T12:30:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getURLWithMinWidthInBGIScaled status=SUCCESS method=ValidatableResponseDemo.getURLWithMinWidthInBGIScaled()[pri:9, instance:com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo@6771beb3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.synechron.restapi.Training.response.vresponse.ValidatableResponseDemo -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
